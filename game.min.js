const TILE_SIZE=36,MAP_SIZE=50,VIEWPORT=20,VIEWPORT_SIZE=TILE_SIZE*VIEWPORT,_=1,_BG="bg",_O="r",_H="h",_R="k",_D="d",_B="b",_P="p",C={};C[_BG]="black",C[_O]="#777",C[_H]=C[_O],C[_R]="black",C[_D]="#513520",C[_B]="#c1ad9e",C[_P]="orange";class Room{constructor(a,b,e,f){this.x=a,this.y=b,this.width=e,this.height=f}}class Dungeon{constructor(a){this.characters=[],this.canvas=a,this.ctx=this.canvas.getContext("2d"),this.map=Array(MAP_SIZE);for(let b=0;b<MAP_SIZE;b++){this.map[b]=Array(MAP_SIZE);for(let e=0;e<MAP_SIZE;e++)this.map[b][e]=_R}this.generate()}placeCharacter(a){this.characters.push(a)}setPlayer(a){this.player=a}generateRooms(a){let k=[];const l=(o,q)=>{return o.x<q.x+q.width&&o.x+o.width>q.x&&o.y<q.y+q.height&&o.height+o.y>q.y},n=o=>{let q=!0;return k.forEach(r=>{!1==q||l(r,o)&&(q=!1)}),q};for(let o=0;o<800;o++){const q=7+Math.round(Math.random()*11),r=7+Math.round(Math.random()*11),s=Math.round(Math.random()*(MAP_SIZE-q-1)),t=Math.round(Math.random()*(MAP_SIZE-r-1)),u=new Room(s,t,q,r);n(u)&&k.push(u)}return k.map(o=>{o.x+=_,o.width-=_,o.y+=_,o.height-=_;for(let q=o.y;q<o.y+o.height;q++)for(let r=o.x;r<o.x+o.width;r++)a[q][r]=_O;return o})}generateMaze(){const a=this.map,b=1,e=["n","s","e","w"],f=()=>{return e[Math.round(Math.random()*e.length)]},h=(j,k,l,n,o)=>{const q=a[k][j];if(q!=l)return!1;if(q!=_R)return!1;let r=!0;if("s"===o?a[k+b]&&a[k+b][j]==_R&&a[k][j-b]==_R&&a[k][j+b]==_R||(r=!1):"n"===o?a[k-b]&&a[k-b][j]==_R&&a[k][j-b]==_R&&a[k][j+b]==_R||(r=!1):"w"===o?a[k][j-b]&&a[k][j-b]==_R&&a[k+b]&&a[k+b][j]==_R&&a[k-b]&&a[k-b][j]==_R||(r=!1):"e"===o?a[k][j+b]&&a[k][j+b]==_R&&a[k+b]&&a[k+b][j]==_R&&a[k-b]&&a[k-b][j]==_R||(r=!1):void 0,!r)return!1;a[k][j]=n;for(let s=!1,t=0;!1==s&&5>t;){const u=f();"s"===u?(a[k+b]&&(s=h(j,k+b,a[k+b][j],n,"s")),a[k][j+b]&&(s=h(j+b,k,a[k][j+b],n,"e")),a[k][j-b]&&(s=h(j-b,k,a[k][j-b],n,"w"))):"n"===u?(a[k-b]&&(s=h(j,k-b,a[k-b][j],n,"n")),a[k][j-b]&&(s=h(j-b,k,a[k][j-b],n,"w")),a[k][j+b]&&(s=h(j+b,k,a[k][j+b],n,"e"))):"w"===u?(a[k][j-b]&&(s=h(j-b,k,a[k][j-b],n,"w")),a[k-b]&&(s=h(j,k-b,a[k-b][j],n,"n")),a[k+b]&&(s=h(j,k+b,a[k+b][j],n,"s"))):"e"===u?(a[k][j+b]&&(s=h(j+b,k,a[k][j+b],n,"e")),a[k-b]&&(s=h(j,k-b,a[k-b][j],n,"n")),a[k+b]&&(s=h(j,k+b,a[k+b][j],n,"s"))):void 0,t++}return!0};for(let j=0;j<MAP_SIZE;j++)for(let k=0;k<MAP_SIZE;k++)a[j][k]==_R&&a[j-b]&&a[j+b]&&a[j][k-b]&&a[j][k+b]&&a[j-b][k]==_R&&a[j+b][k]==_R&&a[j][k-b]==_R&&a[j][k+b]==_R&&h(k,j,_R,_H,f());return a}connectRooms(a){const b=this.map,e=(f,h,j)=>{return b[h-1]&&b[h-1][f]==j||b[h+1]&&b[h+1][f]==j||!(b[h][f-1]!=j)||!(b[h][f+1]!=j)};a.forEach(f=>{const h=[];for(let k=f.y-1;k<f.y+f.height+1;k++)for(let l=f.x-1;l<f.x+f.width+1;l++)b[k][l]==_R&&e(l,k,_O)&&e(l,k,_H)&&h.push({x:l,y:k});for(let k=0;k<4;k++){const l=Math.round(Math.random()*(h.length-1)),n=h[l];b[n.y][n.x]=_D}})}removeDeadEnds(){const a=this.map;for(let b=!1;!b;){b=!0;for(let e=0;e<MAP_SIZE;e++)for(let f=0;f<MAP_SIZE;f++)if(a[e][f]==_H||a[e][f]==_D){let h=0;a[e-1]&&a[e-1][f]!=_R&&h++,a[e+1]&&a[e+1][f]!=_R&&h++,a[e][f-1]!=_R&&h++,a[e][f+1]!=_R&&h++,2>h&&(a[e][f]=_R,b=!1)}}}generate(){this.rooms=this.generateRooms(this.map),this.generateMaze(),this.connectRooms(this.rooms),this.removeDeadEnds(),this.startingRoom=this.rooms[Math.round(Math.random()*(this.rooms.length-1))]}toggleDoor(a,b){this.map[b][a]==_D?this.map[b][a]=_B:this.map[b][a]==_B&&(this.map[b][a]=_D)}render(){this.renderMap(),this.renderCharacters(),this.renderPlayerLightRadius()}renderMap(){const a=this.map,b=this.player;this.ctx.fillStyle=C[_BG],this.ctx.fillRect(1,1,MAP_SIZE*TILE_SIZE,MAP_SIZE*TILE_SIZE);for(let e=this.vpStart("y");e<this.vpStart("y")+VIEWPORT-_;e++)for(let f=this.vpStart("x");f<this.vpStart("x")+VIEWPORT-_;f++)a[e]&&a[e][f]&&(this.ctx.fillStyle=C[a[e][f]],this.ctx.fillRect(this.vpAdjust(f,"x")*TILE_SIZE,this.vpAdjust(e,"y")*TILE_SIZE,TILE_SIZE,TILE_SIZE))}renderCharacters(){this.player;this.characters.forEach(b=>{this.ctx.fillStyle=C[b.TILE],this.ctx.fillRect(this.vpAdjust(b.loc.x,"x")*TILE_SIZE,this.vpAdjust(b.loc.y,"y")*TILE_SIZE,TILE_SIZE,TILE_SIZE)})}vpAdjust(a,b){return a-this.vpStart(b)}vpStart(a){let b=this.player.loc[a]-VIEWPORT/2+_;return 0>b&&(b=0),b}renderPlayerLightRadius(){if(!this.player)return!1;const a=this.player,b=a.loc,e=this.vpAdjust(b.x,"x")*TILE_SIZE+TILE_SIZE/2,f=this.vpAdjust(b.y,"y")*TILE_SIZE+TILE_SIZE/2,h=this.ctx.createRadialGradient(e,f,8.5*TILE_SIZE,e,f,0);h.addColorStop(0,"black"),h.addColorStop(1,"rgba(0,0,0,0)"),this.ctx.fillStyle=h,this.ctx.fillRect(e-VIEWPORT_SIZE/2,f-VIEWPORT_SIZE/2,2*VIEWPORT_SIZE,2*VIEWPORT_SIZE)}}class Game{constructor(a,b){this.FPS=60,this.keyDown=this.keyDown.bind(this),this.level=a,this.player=b,this.bindKeys(),this.placePlayer(),this.level.setPlayer(b),this.gameLoop()}gameLoop(){this.level.render(),setTimeout(()=>{this.gameLoop()},1e3/60)}bindKeys(){document.addEventListener("keydown",this.keyDown)}placePlayer(){const a=this.level.startingRoom,b=a.x+Math.floor(a.width/2),e=a.y+Math.floor(a.height/2);this.player.teleport(b,e),this.level.placeCharacter(this.player)}keyDown(a){const b=this.player.move;switch(a.key){case"w":b("n");break;case"a":b("w");break;case"s":b("s");break;case"d":b("e");break;case"e":this.player.interact();}}}class Character{constructor(a){this.TILE="p",this.loc={x:0,y:0},this.dungeon=a,this.move=this.move.bind(this),this.interact=this.interact.bind(this)}interact(){const a=[{x:this.loc.x,y:this.loc.y-1},{x:this.loc.x-1,y:this.loc.y},{x:this.loc.x,y:this.loc.y+1},{x:this.loc.x+1,y:this.loc.y}];a.forEach(e=>{{const f=this.dungeon.map[e.y][e.x];(f==_D||f==_B)&&this.dungeon.toggleDoor(e.x,e.y)}})}move(a){const b={x:this.loc.x,y:this.loc.y};"n"===a?b.y=this.loc.y-1:"w"===a?b.x=this.loc.x-1:"s"===a?b.y=this.loc.y+1:"e"===a?b.x=this.loc.x+1:void 0;this.isValidLoc(b)&&(this.loc=b)}isValidLoc(a){if(!this.dungeon.map[a.y]||!this.dungeon.map[a.y][a.x])return!1;const b=this.dungeon.map[a.y][a.x];return b==_O||b==_H||b==_B}teleport(a,b){this.loc={x:a,y:b}}}class Player extends Character{constructor(a){super(),this.dungeon=a}}const canvas=document.getElementById("game"),d=new Dungeon(canvas),g=new Game(d,new Player(d));
